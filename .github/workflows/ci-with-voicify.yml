name: CI Pipeline (Full Voicify Testing)

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch:  # Allow manual triggering

jobs:
  test-with-voicify:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.9", "3.10", "3.11", "3.12", "3.13"]

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-voicify-${{ hashFiles('**/requirements*.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-voicify-
          ${{ runner.os }}-pip-
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Install Voicify dependencies
      run: |
        # Install additional dependencies for Voicify (if voicify package exists)
        pip install voicify || echo "Voicify package not available on PyPI, using mock"
        
        # Alternative: install mock dependencies if real voicify not available
        pip install pytest-mock || true
    
    - name: Verify module import
      run: |
        python -c "import voicify_server; print('âœ… Module imports successfully')"
        python -c "from voicify_server import VOICIFY_AVAILABLE; print(f'Voicify available: {VOICIFY_AVAILABLE}')"
    
    - name: Run tests with fallback mode
      run: |
        python -m pytest tests/ -v --tb=short
    
    - name: Run tests with Voicify mocks
      run: |
        python -m pytest tests/test_voicify_server.py::TestTextToSpeechFunction::test_text_to_speech_with_voicify_success -v
        python -m pytest tests/test_voicify_server.py::TestIntegrationScenarios::test_complete_workflow_with_voicify -v
