name: Comprehensive Testing

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch:

jobs:
  test-failfast-mode:
    name: Test Fail-Fast Mode (CI Compatible)
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.9", "3.10", "3.11", "3.12", "3.13"]

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        # Install core dependencies without Voicify for older Python versions
        pip install flask flask-cors flask-restx numpy requests pytest pytest-flask pytest-cov pytest-watch
        
        # Only install Voicify for Python 3.12+ (due to package requirements)
        if python -c "import sys; exit(0 if sys.version_info >= (3, 12) else 1)" 2>/dev/null; then
          echo "Installing Voicify for Python 3.12+..."
          pip install ./voicify-0.1.0-py3-none-any.whl || echo "Voicify wheel not found, continuing..."
        else
          echo "Skipping Voicify installation for Python <3.12"
        fi
    
    - name: Verify fail-fast mode
      run: |
        python -c "
        from voicify_server import VOICIFY_AVAILABLE
        print(f'Voicify available: {VOICIFY_AVAILABLE}')
        assert not VOICIFY_AVAILABLE, 'Expected voicify unavailable in CI'
        print('✅ Confirmed fail-fast mode (no Voicify)')
        "
    
    - name: Run all tests
      run: |
        python -m pytest tests/ -v
    
    - name: Test fail-fast TTS functionality
      run: |
        python -c "
        from voicify_server import text_to_speech
        try:
            text_to_speech('CI test audio')
            print('❌ Should have failed!')
            exit(1)
        except RuntimeError as e:
            if 'Voicify TTS not available' in str(e):
                print('✅ Fail-fast TTS working correctly')
            else:
                print(f'❌ Wrong error: {e}')
                exit(1)
        "

  test-with-voicify-mocks:
    name: Test Voicify Integration (Mocked)
    runs-on: ubuntu-latest
    if: github.event_name == 'push' || github.event_name == 'workflow_dispatch'

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python 3.13
      uses: actions/setup-python@v4
      with:
        python-version: "3.13"
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        # Install core dependencies without Voicify for older Python versions
        pip install flask flask-cors flask-restx numpy requests pytest pytest-flask pytest-cov pytest-watch pytest-mock
        
        # Only install Voicify for Python 3.12+ (due to package requirements)
        if python -c "import sys; exit(0 if sys.version_info >= (3, 12) else 1)" 2>/dev/null; then
          echo "Installing Voicify for Python 3.12+..."
          pip install ./voicify-0.1.0-py3-none-any.whl || echo "Voicify wheel not found, continuing..."
        else
          echo "Skipping Voicify installation for Python <3.12"
        fi
    
    - name: Run Voicify-specific tests
      run: |
        echo "Testing Voicify integration scenarios..."
        python -m pytest tests/test_voicify_server.py::TestTextToSpeechFunction::test_text_to_speech_with_voicify_success -v
        python -m pytest tests/test_voicify_server.py::TestTextToSpeechFunction::test_text_to_speech_with_voicify_file_not_found -v
        python -m pytest tests/test_voicify_server.py::TestIntegrationScenarios::test_complete_workflow_with_voicify -v
    
    - name: Run fallback tests
      run: |
        echo "Testing fallback scenarios..."
        python -m pytest tests/test_voicify_server.py::TestTextToSpeechFunction::test_text_to_speech_fallback_mode -v
        python -m pytest tests/test_voicify_server.py::TestIntegrationScenarios::test_complete_workflow_without_voicify -v

  test-integration-scenarios:
    name: Integration and Performance Tests
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.13"]

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        # Install core dependencies without Voicify for older Python versions
        pip install flask flask-cors flask-restx numpy requests pytest pytest-flask pytest-cov pytest-watch
        
        # Only install Voicify for Python 3.12+ (due to package requirements)
        if python -c "import sys; exit(0 if sys.version_info >= (3, 12) else 1)" 2>/dev/null; then
          echo "Installing Voicify for Python 3.12+..."
          pip install ./voicify-0.1.0-py3-none-any.whl || echo "Voicify wheel not found, continuing..."
        else
          echo "Skipping Voicify installation for Python <3.12"
        fi
    
    - name: Run integration tests
      run: |
        python -m pytest tests/test_integration.py -v --tb=short
    
    - name: Run performance tests
      run: |
        python -m pytest tests/simple_integration_test.py::test_server_performance -v --tb=short
    
    - name: Run concurrency tests
      run: |
        python -m pytest tests/concurrency_test.py -v --tb=short
    
    - name: Test cleanup functionality
      run: |
        python -m pytest tests/test_cleanup.py -v --tb=short
  
  generate-coverage:
    name: Generate Coverage Report
    runs-on: ubuntu-latest
    needs: [test-failfast-mode, test-with-voicify-mocks]
    if: github.event_name == 'push'

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python 3.13
      uses: actions/setup-python@v4
      with:
        python-version: "3.13"
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        # Install core dependencies without Voicify for older Python versions
        pip install flask flask-cors flask-restx numpy requests pytest pytest-flask pytest-cov pytest-watch
        
        # Only install Voicify for Python 3.12+ (due to package requirements)
        if python -c "import sys; exit(0 if sys.version_info >= (3, 12) else 1)" 2>/dev/null; then
          echo "Installing Voicify for Python 3.12+..."
          pip install ./voicify-0.1.0-py3-none-any.whl || echo "Voicify wheel not found, continuing..."
        else
          echo "Skipping Voicify installation for Python <3.12"
        fi
    
    - name: Generate coverage report
      run: |
        python -m pytest tests/ --cov=voicify_server --cov-report=xml --cov-report=html
    
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        flags: comprehensive-test
        fail_ci_if_error: false
